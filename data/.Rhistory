setwd("/home/tapajit/Work/release_qual/data")
filelist <- list.files(path = "../data/data1_May16/", pattern = "*335-3.new.user", full.names = TRUE)
#Reading New data
filelist1 <- list.files(path = "../data/data1_May16/", pattern = "*335-3.new$", full.names = TRUE)
UserFile = do.call(rbind, lapply(filelist, function(x) read.csv(file = x,sep=";",na.strings="(not set)")))
UserFile[,7] <- as.Date(UserFile[,7],"%Y%m%d")
UserFile[,8] <- as.integer(UserFile[,8])
UserFile[,9] <- as.integer(UserFile[,9])
UserFile[,10] <- as.numeric(UserFile[,10])
UserFile <- UserFile[order(UserFile[,7]),]
NewData <- do.call(rbind, lapply(filelist1, function(x) read.csv(file = x,sep=";")))
NewData[,3] <- as.Date(as.character(NewData[,3]),"%Y%m%d")
NewData <- NewData[order(NewData[,3]),]
total = merge(NewData,UserFile,all=T)
sum(colSums(is.na(total)))
(colSums(is.na(total)))
total = total[complete.cases(total),]
total$ga.deviceCategory <- factor(total$ga.deviceCategory)
total$ga.mobileDeviceBranding <- factor(total$ga.mobileDeviceBranding)
total$ga.mobileDeviceInfo <- factor(total$ga.mobileDeviceInfo)
View(NewData)
n= total[,sapply(total,is.numeric)]
boxplot(n)
n=scale(n)
boxplot(n)
summary(n)
n= total[,sapply(total,is.numeric)]
boxplot(n)
n$ga.timeOnSite =scale(n$ga.timeOnSite)
boxplot(n)
boxplot(n, ylim=100)
?boxplot
boxplot(n, log="y")
boxplot(n+1, log="y")
boxplot(n+1, log="y", horizontal = T)
boxplot(n+1, log="x", horizontal = T)
boxplot(n+1, log="y")
boxplot(n+1, log="y", xlab=c("E","d","N","d","c","r","u","l"))
total$ga.fatalExceptions <- NULL
n= total[,sapply(total,is.numeric)]
colnames(n) = c("Ex","NVis","Vis","TymSyt","NUsr","Usr","Session")
boxplot(n+1, log="y")
boxplot(n+1, log="")
boxplot(n+1, log="y")
boxplot(n+1, log="y")
n= total[,sapply(total,is.numeric)]
n$ga.timeOnSite =scale(n$ga.timeOnSite)
colnames(n) = c("Ex","NVis","Vis","TymSyt","NUsr","Usr","Session")
boxplot(n+1, log="y")
n= total[,sapply(total,is.numeric)]
colnames(n) = c("Ex","NVis","Vis","TymSyt","NUsr","Usr","Session")
boxplot(n+1, log="y")
n= scale(n)
boxplot(n+1, log="y")
?scale
boxplot(n+1)
boxplot(n,ylim=c(0,5))
boxplot(n,ylim=c(-5,5))
boxplot(n,ylim=c(-2,2))
?tapply
rm(n)
summary(total)
View(total)
?glm
?lm
total$ga.timeOnSite = log(total$ga.timeOnSite)
summary(total)
total = merge(NewData,UserFile,all=T)
total = total[complete.cases(total),]
total$ga.deviceCategory <- factor(total$ga.deviceCategory)
total$ga.mobileDeviceBranding <- factor(total$ga.mobileDeviceBranding)
total$ga.mobileDeviceInfo <- factor(total$ga.mobileDeviceInfo)
total$ga.fatalExceptions <- NULL
total <- total[order(total[,3]),]
total$ga.timeOnSite = log(total$ga.timeOnSite+1)
summary(total$ga.timeOnSite)
density = total$ga.exceptions/total$ga.newUsers
total$ga.mobileDeviceBranding <- NULL #Only one brand
lmfit = lm(density~., data=total)
summary(lmfit)
alias(lmfit)
alias(lmfit)
?alias
?summary.lm
## CUSTOMER DEFECTION ##
# model.build(start_ind,end_ind,start_dep,end_dep,evaluate){}
# model.deploy(object,dumpDate){}
# INSTALL PACKAGES
if (!require("plyr")) install.packages('plyr'); library('plyr')
# SET DATE FORMAT
f <- "%d/%m/%Y";setClass("fDate");setAs(from="character",to="fDate",def=function(from) as.Date(from,format=f))
# LOADS DATA
customers<-read.csv("http://ballings.co/hidden/aCRM/data/chapter6/customers.txt",sep=";",header=TRUE,colClasses=c("character","factor","fDate","factor","factor","character"))
formula<-read.csv("http://ballings.co/hidden/aCRM/data/chapter6/formula.txt",sep=";",header=TRUE,colClasses=c("character","factor","factor","numeric"))
subscriptions<-read.csv("http://ballings.co/hidden/aCRM/data/chapter6/subscriptions.txt",sep=";",header=TRUE,colClasses=c("character","character","factor","factor","fDate","fDate","integer","integer","fDate","factor","factor","fDate","character","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
delivery<-read.csv("http://ballings.co/hidden/aCRM/data/chapter6/delivery.txt",sep=";",header=TRUE,colClasses=c("character","character","factor","factor","factor","fDate","fDate"))
complaints<-read.csv("http://ballings.co/hidden/aCRM/data/chapter6/complaints.txt",sep=";",header=TRUE,colClasses=c("character","character","factor","fDate","factor","factor","factor"))
credit<-read.csv("http://ballings.co/hidden/aCRM/data/chapter6/credit.txt",sep=";",header=TRUE,colClasses=c("character","character","factor","fDate","factor","numeric","integer"))
# DATES
t1<-min(subscriptions$StartDate)
t4<-max(subscriptions$StartDate)
t3<-t4-365 # dependent period of 1 yr
t2<-t3-1 # operational period of 1 to 3 days
# CALC: NUMB COMPLAINTS BY CUSTOMER
c1<-ddply(complaints,~CustomerID,summarize,num.complaints=length(ComplaintID))
# CALC: NUM.SUBSCRIPTIONS, SUM.NBRNEWSPAPERS, SUM.TOTALDISCOUNT, SUM.TOTALPRICE, SUM.TOTALCREDIT, MAX.RENEWAL
c2<-ddply(subscriptions,~CustomerID,summarize,
num.subscriptions=length(SubscriptionID),
sum.newspapers=sum(NbrNewspapers),
sum.totaldiscount=sum(TotalDiscount),
sum.totalprice=sum(TotalPrice),
sum.credit=sum(TotalCredit),
max.renewal=max(RenewalDate))
# CALC: COUNT RENEWALS
subscriptions$renewed <- ifelse(is.na(subscriptions$RenewalDate),0,1) # if renew 1, else 0
c3<-ddply(subscriptions,~CustomerID,summarize,num.renew=sum(renewed)) # sum number renewals by customer
# CALC: COUNT CREDITS
subscriptions$in.credit <- ifelse(subscriptions$SubscriptionID%in%credit$SubscriptionID,1,0) # if subid in credit subid then 1, else 0
c4<-ddply(subscriptions,~CustomerID,summarize,num.credit=sum(in.credit)) # sum num credits by customer id
# CALC: NUMB PRODUCTS
c5<-ddply(subscriptions,~CustomerID,summarize,prod.id=unique(ProductID)) # unique productID by customerID (n=1607)
c5<-ddply(c5,~CustomerID,summarize,num.products=length(prod.id)) # count unique productID by customerID
# CALC: TIME AS CUSTOMER
c6<-ddply(subscriptions,~CustomerID,summarize,max.end=max(EndDate),min.start=min(StartDate))
c6$days.cust<-as.integer(c6$max.end)-as.integer(c6$min.start)
## MERGE TO GET BASETABLE
base<-merge(customers[,c(1,2,3,4)],c1,by="CustomerID",all.x=TRUE)
base<-merge(base,c2,by="CustomerID",all.x=TRUE)
base<-merge(base,c3,by="CustomerID",all.x=TRUE)
base$did.renew <- ifelse(base$num.renew==0,0,1) # ever renewed 1, else 0
base<-merge(base,c4,by="CustomerID",all.x=TRUE)
base$did.credit <- ifelse(base$num.credit==0,0,1) # if cust ever had a credit 1, else 0
base<-merge(base,c5,by="CustomerID",all.x=TRUE)
base<-merge(base,c6[,c(1,4)],by="CustomerID",all.x=TRUE)
# change data types
base$num.renew<-as.integer(base$num.renew)
base$did.renew<-as.integer(base$did.renew)
base$num.credit<-as.integer(base$num.credit)
base$did.credit<-as.integer(base$did.credit)
# deal with NAs
base$num.complaints <- ifelse(is.na(base$num.complaints),0,base$num.complaints)
base$sum.totaldiscount <- ifelse(is.na(base$sum.totaldiscount),0,base$sum.totaldiscount)
base$sum.totalprice <- ifelse(is.na(base$sum.totalprice),0,base$sum.totalprice)
base$sum.credit <- ifelse(is.na(base$sum.credit),0,base$sum.credit)
## COMPUTE DV
# 2020 dates NA subscriptions
# 8252-2020 = 6,232 subscriptions with renewal dates
# 1090 dates NA base
# 1389-1090 = 299 customers that renewed
# drop customers that don't renew after t2
base1<-base[which(base$max.renewal>t2),]
# CALC: DV 1 if churn, else 0
base1$DV <- as.factor(ifelse(t3<=base1$max.renewal && base1$max.renewal<=t4,1,0))
View(base1)
max(subscriptions$StartDate)
max(subscriptions$EndDate)
summary(base1$max.renewal)
min(subscriptions$StartDate)
